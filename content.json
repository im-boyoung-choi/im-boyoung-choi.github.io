{"pages":[],"posts":[{"title":"왕초보를 위한 GitHub Blog 만들기(with. hexo icarus)","text":"개발 공부를 시작하기 전에 기록을 정리하기 위해 블로그를 개설했다. 네이버, 티스토리, 벨로그, 브런치, 미디엄 등 요즘 개발자들에게 인기 있는 블로그 플랫폼들을 다 살펴봤지만 개발 공부하는데 좀 더 도움이 되는 건 없을까 찾던 중 GitHub 블로그를 선택하게 됐다. 구글에 ‘GitHub 블로그 만들기’를 검색하면 수많은 글이 나오지만, 진짜 나 같은 왕왕-왕초보를 위해 처음부터 끝까지 단 하나만 보고 뚝딱 만들어 낼 수 있게 작성된 포스트는 찾을 수 없었다. 에러 없이 개설하기까지 Git repository를 6번 삭제하고 다시 생성했다. 이 글은 node고 script고 개발의 기본 지식도 잘 모르는 나 같은 왕왕-왕초보를 위한 GitHub 블로그 개설 방법 안내이다. 1. GitHub 회원가입하기GitHub 블로그는 사용자의 username을 활용하여 URL이 생성된다. GirHub 공식문서에 따르면 블로그를 만들 때 사용되는 URL 형식을 [username].github.io로 정확히 일치하게 입력하지 않으면 작동하지 않을 수 있으므로 올바르게 설정해야 한다고 안내되어 있다. 나도 기존에 사용하던 GitHub 계정이 있었지만 이참에 대외적으로 사용할 수 있는 새 계정을 만들어야겠다 싶어 새로 계정을 만들었다. 계정을 만든 뒤에도 username을 변경할 수는 있지만 repository를 꽤 만들어서 활용하던 상태에서 username을 변경하면 기존에 공유했던 URL들이 다 무효화되기 때문에 개설할 때 신중하게 만드는 게 좋겠다. ** 나는 git이 이미 PC에 설치가 되어 있었는데, 혹시 설치되어 있지 않다면 다운로드받아야 한다. 2. repository 만들기 계정을 만들었으면 블로그 관리에 사용할 repository를 만든다. (초록색 ‘new’ 버튼 클릭) 위에서 언급했듯이 username을 정확히 일치시키지 않으면 작동하지 않을 수 있기 때문에 repository name을 적을 때 [username(=owner)].github.io로 제대로 입력했는지 꼭 확인한다. repository name 입력 후 ‘Cteate repository’를 눌러 생성을 완료한다. 3. 서버에 프로젝트 repository 내려받기git clone을 통해 방금 생성한 repository를 서버에 내려받아야 한다. 윈도우는 명령 프롬프터, MAC은 터미널을 열어 repository를 다운받을 서버(컴퓨터 폴더) 위치로 이동한다. 디렉토리 이동 명령어(cd) 사용법$ cd .. //해당 경로에서 상위 디렉토리로 이동$ cd [폴더명] //해당 경로에서 지정한 폴더로 이동$ [드라이브명]: //해당 드라이브로 이동 생성한 repository 화면 우측에 초록색 ‘code’ 버튼을 누르면 HTTPS 정보가 나온다. 이를 복사하여 clone repository를 진행한다. $ git clone https://github.com/im-boyoung-choi/im-boyoung-choi.github.io.git //본인 repository URLCloning into 'im-boyoung-choi.github.io'...warning: You appear to have cloned an empty repository. 여기서 나오는 warning은 무시하면 된다. 내려받은 repository로 터미널 디렉토리 경로를 다시 이동해준다. $ cd im-boyoung-choi.github.io.git 4. node 설치하기(with.hexo)GitHub 블로그를 검색해보면 Hexo와 Jekyll이라는 키워드를 많이 볼 수 있다. Hexo, Jekyll은 Static Site Generator(정적 웹사이트 생성기)인데, Jamstack에 들어가면 모든 Static Site Generator를 한눈에 볼 수 있다. 그중에서 사람들이 제일 많이 사용하는 것이 Jekyll, Hexo, Hugo(인기순)이다. 나는 한글 레퍼런스를 쉽게 찾을 수 있는지가 중요한 선택 기준 중 하나이기 때문에, 한국에서도 사용자가 많아 한글 레퍼런스를 비교적 쉽게 찾을 수 있는 Jekyll, Hexo로 선택지를 추렸다. 둘의 가장 큰 차이점은 Jekyll은 ruby 기반, Hexo는 javascript(node.js) 기반이라는 것인데, 나는 ruby에 대해서 잘 모르기도 하고 Jekyll은 빌드 속도가 느리다는 후기가 있어서 Hexo 블로그를 선택했다. 앞서 말했듯이, Hexo는 node.js 기반이기 때문에 node와 npm이 설치되어 있어야 한다. 아래 명령어로 node와 npm이 설치되어 있는지 확인해보자. $ node -vv14.15.4$ npm -v6.14.10 node 버전 확인이 안 된다면, node 공식 홈페이지에 가서 다운로드받으면 된다. npm은 ‘node package manager’이기 때문에 node를 설치하면 자동으로 같이 설치된다. 설치가 끝났다면 버전 확인 명령어를 통해 제대로 설치가 되었는지 확인한다. 5. hexo 설치하고 블로그 개설하기이제 hexo를 설치하면 된다. hexo 설치는 hexo 공식 문서를 확인하면 어렵지 않게 성공할 수 있다. hexo 문서에도 보면 hexo 설치를 시작하기 전에 git과 node를 설치하라는 안내가 있다. 우리는 이미 설치를 완료했기 때문에 바로 hexo 설치로 넘어간다. $ npm install -g hexo-cli 설치가 완료되면 타겟 폴더를 만들고 hexo를 초기화시켜줘야 한다. 방법은 아래와 같다. $ hexo init blog //hexo 버전 관리용 blog 폴더 생성$ cd blog //디렉토리 경로 변경$ npm install$ npm install hexo-server --save //hexo server 실행을 위한 플러그인$ npm install hexo-deployer-git --save //편리한 git 배포를 위한 플러그인 여기까지 마쳤으면 blog 폴더 내에 생성된 _config.yml 파일을 수정해보자. _config.yml 파일은 블로그의 기본 환경설정을 할 수 있는 정보들이 담겨있다. 5-1. 블로그 사이트 정보블로그 기본 정보들을 설정할 수 있다. # Sitetitle: nice to meet you :)subtitle: ''description: ''keywords:author: boyoung-choilanguage: kotimezone: '' 5-2. 블로그 URL 정보블로그 URL 정보를 설정할 수 있다. root 설정이 없는 경우 다음과 같이 추가해주면 된다. # URL## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'url: https://im-boyoung-choi.github.ioroot: /permalink: :year/:month/:day/:title/permalink_defaults:pretty_urls: trailing_index: true # Set to false to remove trailing 'index.html' from permalinks trailing_html: true # Set to false to remove trailing '.html' from permalinks 5-3. GitHub 정보배포를 위해 본인의 GitHub 정보를 추가한다. 처음 생성한 본인의 GitHub 블로그 repository URL을 추가하면 된다. # Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: https://github.com/im-boyoung-choi/im-boyoung-choi.github.io.git branch: master 여기까지 마쳤으면 배포하기 전 로컬에 서버를 띄워 확인해보자. $ hexo generate // hexo 정적 리소스 생성, GitHub에 올라갈 리소스만 정리$ hexo server 변경 사항이 적용이 잘 안 된다면 다음 명령어를 사용한 뒤 위 과정을 한 번 더 시도해보자. $ hexo clean // 캐시 파일(db.json) 및 생성된 파일(/public) 삭제 이후 로컬에서 확인이 완료되면 배포를 진행해준다. $ hexo deploy 본인의 GitHub 블로그 URL로 이동하면 배포가 된 것을 확인할 수 있다. 6. 테마 적용하기(with. icarus)이제는 테마를 적용하면 된다. 처음에 repository를 6번 삭제하고 다시 생성했다고 했는데, 바로 테마 적용이 문제였다. 적용이 안 되거나, 화면이 안 보이거나 각종 에러가 발생했는데 불행히 해결 방법을 찾지 못해 앞선 과정의 방법을 계속해서 바꿔 본 결과 현재 과정을 통해 테마 적용에 성공했다. hexo 테마는 종류가 많지만 나는 디테일한 부분은 어차피 커스텀 할 예정이라 큰 레이아웃 정도만 훑어보고 테마를 결정했다. 사람들이 많이 사용하는 테마는 icarus 외에 clean blog, next, tranquilpeak 정도가 있는 듯 하다. hexo v5부터는 npm 명령어로 테마 설치가 가능하다고 하는데(실제 icarus 공식 문서에서도 npm install로 설치하는 방법을 안내하고 있다.) 에러의 산을 넘지 못해 나는 scbmodule을 추가하는 방법으로 설치를 진행했다. $ git submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus submodule add를 진행하면 themes 폴더 하위에 icarus 폴더가 생성된다. 5번 단계에서 수정했던 _config.yml 파일을 다시 열어 테마를 수정해주자. # Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: icarus 이후 hexo server 명령어로 서버를 띄우면 에러가 발생한다. INFO Validating configINFO ======================================= ██╗ ██████╗ █████╗ ██████╗ ██╗ ██╗███████╗ ██║██╔════╝██╔══██╗██╔══██╗██║ ██║██╔════╝ ██║██║ ███████║██████╔╝██║ ██║███████╗ ██║██║ ██╔══██║██╔══██╗██║ ██║╚════██║ ██║╚██████╗██║ ██║██║ ██║╚██████╔╝███████║ ╚═╝ ╚═════╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═════╝ ╚══════╝=============================================INFO === Checking package dependencies ===ERROR Package bulma-stylus is not installed.ERROR Package hexo-renderer-inferno is not installed.ERROR Package hexo-component-inferno is not installed.ERROR Package inferno is not installed.ERROR Package inferno-create-element is not installed.ERROR Please install the missing dependencies your Hexo site root directory:ERROR npm install --save bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 hexo-component-inferno@^0.12.0 inferno@^7.3.3 inferno-create-element@^7.3.3ERROR or:ERROR yarn add bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 hexo-component-inferno@^0.12.0 inferno@^7.3.3 inferno-create-element@^7.3.3 에러 안내를 보면 추가 설치가 필요한 것들이 안내되는데 그대로 복사해서 터미널에 입력해주면 된다. $ npm install --save bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 hexo-component-inferno@^0.12.0 inferno@^7.3.3 inferno-create-element@^7.3.3 완료 후 다시 hexo server 명령어로 서버를 띄우면 적용된 테마를 확인할 수 있다. 7. 배포하기테마 적용 후에는 hexo clean 을 한 뒤 최종 배포를 진행한다. $ hexo clean$ hexo deploy --generate //generate와 deploy를 한 번에 배포 후 본인의 블로그 URL로 이동하면 반영된 것을 확인할 수 있다.","link":"/2021/07/01/210701-post01/"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"}],"categories":[{"name":"blog(hexo)","slug":"blog-hexo","link":"/categories/blog-hexo/"}]}